# Build Configuration

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

# Project Configuration

[project]
name = "gototile"
dynamic = ["version"]
description = "Create sky grids and tiles to cover extended sky maps"
readme = "README.md"
license = {file = "LICENSE.txt"}
requires-python = ">=3.7"
authors = [
    { name = "Martin Dyer", email = "martin.dyer@sheffield.ac.uk" },
    { name = "Darren White", email = "djwhiteastro@gmail.com" },
    { name = "Evert Rol", email = "evert.rol@gmail.com" },
]
maintainers = [
  { name = "Martin Dyer", email = "martin.dyer@sheffield.ac.uk" },
]
dependencies = [
    "astropy>=5",
    "astroplan>=0.8",
    "healpy>=1.16",
    "mhealpy>=0.2",
    "ligo.skymap>=1.0.4",
    "matplotlib>=3.6",
    "numpy>=1.24",
    "pandas>=1.5",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Astronomy",
]
keywords = [
    "astronomy",
]

[project.scripts]
gototile = "gototile.cli:main"

[project.urls]
homepage = "http://github.com/GOTO-OBS/goto-tile"
documentation = "http://github.com/GOTO-OBS/goto-tile"
repository = "http://github.com/GOTO-OBS/goto-tile"

# Tool Configuration

[tool.hatch.version]
source = "vcs"
tag-pattern =  "(v\\d+\\.\\d+\\.\\d+)"  # e.g. v1.2.3

[tool.hatch.build.hooks.vcs]
version-file = "src/gototile/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/gototile",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    ## pydocstyle
    # Numpy docstring format for pydocstyle
    # (see https://www.pydocstyle.org/en/stable/error_codes.html#default-conventions)
    "D107",  # undocumented-public-init
    "D203",  # incorrect-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "D213",  # multi-line-summary-second-line
    "D402",  # signature-in-docstring
    "D413",  # missing-blank-line-after-last-section
    "D415",  # missing-terminal-punctuation
    "D416",  # missing-section-name-colon
    "D417",  # undocumented-param
    # This one isn't part of the Numpy format, but it's just annoying and often disabled
    "D105",  # undocumented-magic-method

    ## Pylint
    # Disable complaining about magic values, annoying with coordinates (dec=90 etc)
    "PLR2004",  # magic-value-comparison

    ## Tryceratops
    # Disable complaining about error messages
    "TRY003",  # raise-vanilla-args

    ## flake8-boolean-trap
    # Disable complaining about boolean default values, many come from other apis (nested=True etc)
    "FBT002",  # boolean-default-value-positional-argument

    ## flake8-commas
    # Disable complaining about trailing commas, since hte linter handles it
    "COM812",  # missing-comma

    ## Any other addons to fully ignore
    "ANN",  # flake8-annotations (TODO)
    "T20",  # flake8-print
    "EM",  # flake8-errmsg
    "FIX",  # flake8-fixme
    "TD",  # flake8-todos
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
